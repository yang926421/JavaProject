package com.lyy._01JUnit单元测试类._01Test测试;

public class TestDemo {
    /**
    单元测试是指写的测试代码给自己类中的方法进行预期正确性的验证
     单元测试一旦写好了这些测试代码,就可以一直使用,实现一定程度上的自动化测试

     单元测试一般要使用框架进行

     单元测试的经典框架JUnit

     Junit是java语言编写的第三方单元测试框架
     可以帮助我们方便且快速的测试我们代码的正确性

     单元测试的概念
        单元  在JAVA中,一个类就是一个单元
        单元测试   程序员用Junit编写一小段代码,用来对某个类中的某个方法进行功能测试或者业务逻辑测试

     Junit测试框架的作用
        用来对类中的方法功能进行有目的的测试,以保证程序的正确性和稳定性
        能够独立的测试某个方法或者所有方法的预期正确性

     Junit测试代码
        a 先模拟逻辑代码
        b 写测试类
            测试类的命名规范  一Test开头,以业务类类名结尾,使用驼峰体命名法
            业务名称  UserService
            测试这个业务的测试类  TestUserService/UserServiceTest
        c 在测试类中写测试方法
            测试方法的命名规则  以Test开头,以业务的方法名结尾
        d 测试方法的注意事项
            必须是public修饰的,没有返回值,没有参数
            必须使用@Test注解


     Junit4的常用注解
        @Test 测试方法
        @Before :在每一个测试方法执行前执行一次
        @After 在每一个测试方法执行之后执行一次
        @BeforeClass  所有测试方法执行前执行一次
        @AfterClass 所有测试方法执行之后执行一次

    Junit5的常用注解
         * @Test 测试方法！
     * @BeforeEach：用来修饰实例方法，该方法会在每一个测试方法执行之前执行一次。
     * @AfterEach：用来修饰实例方法，该方法会在每一个测试方法执行之后执行一次。
     * @BeforeAll：用来静态修饰方法，该方法会在所有测试方法之前只执行一次。
     * @AfterAll：
     * */
}
