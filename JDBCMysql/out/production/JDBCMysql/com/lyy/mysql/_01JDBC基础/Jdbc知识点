JDBC
    java databases connection  java数据库连接
    是一种操作数据库的规范,规则和标准   类/接口
    接口定义的抽象方法 public abstract Connection getConnection();

    mysql提供针对java的数据库驱动,必然符合jdbc标准,覆盖重写方法 getConnection()

    java.sql.Connection接口
    Connection con = xxx对象.getConnection()  返回一个connection对象,xxxd对象是一个实现类对象
    返回一个Connection对象的返回值,左侧是接口,右侧是实现类    多态

    jdbc和mysql驱动的关系
        接口和实现类的关系

    JDBC操作数据库的开发步骤
        1.注册驱动
        2.获得连接
        3.获得执行sql语句的对象
        4.执行sql语句,并返回结果
        5.处理结果
        6.释放资源
    1.注册驱动
     //注册驱动  方式一
      DriverManager.registerDriver(new Driver());
         mysql提供的驱动中driver类下有个静态代码块  实现的就是注册驱动 ,所以不用方式一再注册了

        static {
                try {
                    DriverManager.registerDriver(new Driver());
                } catch (SQLException var1) {
                    throw new RuntimeException("Can't register driver!");
                }
      方式一
       //读取配置文件
                  Properties properties = new Properties();
                  InputStream is = JDBCUtils03.class.getClassLoader().getResourceAsStream("config.properties");
                  properties.load(is);
                  url = properties.getProperty("url");
                  user = properties.getProperty("user");
                  password =  properties.getProperty("password");
                  driverClassName = properties.getProperty("driverClassName");
      通过配置文件读取信息的方式二
      java.utils.ResourceBundle类: 资源管理类
       有个静态方法
          public static ResourceBundle getBundle(String baseName); 获取ResourceBundle类的对象
          参数 String baseName   只需要写文件名 不需要写扩展名
          要求 配置文件 必须写在SRC根目录下
          public String getString(String key)
              根据方法参数String类型的键去获取对应的value值
            ResourceBundle rb = ResourceBundle.getBundle("config");
                       url = rb.getString("url");
                       user = rb.getString("user");
                       password = rb.getString("password");
                       driverClassName = rb.getString("driverClassName");

       jdbc使用连接池
        1.c3p0连接池
            配置文件  c3p0.properties     c3p0-config.xml
            会优先读取xml文件的配置  封装成 C3P0Utils工具类进行使用 更加节省资源
        2.Druid连接池



















































