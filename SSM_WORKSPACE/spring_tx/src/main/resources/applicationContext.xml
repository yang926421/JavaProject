<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

">

    <context:component-scan base-package="cn.gsxt"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/spring_test"/>
        <property name="user" value="root"/>
        <property name="password" value="123"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    <bean id="accountDao" class="cn.gsxt.dao.impl.AccountDaoImpl">-->
    <!--        <property name="jdbcTemplate" ref="jdbcTemplate"/>-->
    <!--</bean>-->

    <!--        目标对象,内部的方法就是切点-->
    <!--    <bean id="accountService" class="cn.gsxt.service.impl.AccountServiceImpl">-->
    <!--        <property name="accountDao" ref="accountDao"/>-->
    <!--    </bean>-->
    <!--    配置平台事务管理器
    transactionManger 底层会从DataSource拿一个连接来进行事务控制
    -->
    <bean id="transactionManger" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--    使用注解配置的时候事物的注解驱动  -->
    <tx:annotation-driven transaction-manager="transactionManger"/>

    <!--    <tx:advice id="txAdvice" transaction-manager="transactionManger">-->
    <!--        <tx:attributes>-->
    <!--            <tx:method name="*"/>-->
    <!--        </tx:attributes>-->
    <!--    </tx:advice>-->

    <!--    <aop:config>-->
    <!--        <aop:pointcut id="myPointCut" expression="execution(* cn.gsxt.*.*(..))"/>-->
    <!--        <aop:advisor advice-ref="txAdvice"></aop:advisor>-->
    <!--    </aop:config>-->
    <!--    通知,事物的增强-->
    <tx:advice id="txAdvice" transaction-manager="transactionManger">
        <!--        设置事务的属性信息-->
        <tx:attributes>
            <!--        可以配置多个,对不同的方法进行不同的事务控制    <tx:method name="transfer"/>-->
            <!--            <tx:method name="transfer" isolation="REPEATABLE_READ" timeout="-1"/>-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--    需要配置事务的AOP注入-->
    <aop:config>
        <!--        事务增强用advice-->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.gsxt.service.impl.*.*(..))"></aop:advisor>
    </aop:config>


</beans>